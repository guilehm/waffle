version: "3.8"

services:

  tmdb:
    build: ./backend-services/tmdb
    container_name: tmdb
    command: go run -tags musl main.go
    volumes:
      - ./backend-services/tmdb:/go/src/tmdb
    working_dir: /go/src/tmdb
    depends_on:
      - kafka
    environment:
      PORT: 80
      API_KEY: ""
      KAFKA_BROKERS: "kafka:9092"

  frontend:
    build: ./frontend/
    container_name: frontend
    command: yarn dev
    volumes:
      - ./frontend:/usr/app
      - ./frontend/node_modules:/usr/app/node_modules
    ports:
      - "3000:80"
    environment:
      PORT: 80

  nginx:
    image: nginx:1.25.3
    container_name: nginx
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
      - ./proxy/default.conf:/etc/nginx/conf.d/default.conf
      - ./proxy/assets:/assets
    ports:
      - "80:80"
    links:
      - frontend:frontend
      - tmdb:tmdb

    networks:
      default:
        aliases:
          - waffle.local.com

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
